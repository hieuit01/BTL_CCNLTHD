# Generated by Django 5.1.7 on 2025-05-03 09:05

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField(help_text='Chiều cao (cm)')),
                ('weight', models.FloatField(help_text='Cân nặng (kg)')),
                ('age', models.IntegerField()),
                ('goal', models.CharField(choices=[('gain_muscle', 'Tăng cơ'), ('lose_weight', 'Giảm cân'), ('maintain', 'Duy trì sức khỏe')], default='maintain', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('calories', models.IntegerField(help_text='Lượng calo (kcal)')),
                ('protein', models.FloatField(help_text='Lượng protein (g)')),
                ('carbs', models.FloatField(help_text='Lượng carbohydrate (g)')),
                ('fat', models.FloatField(help_text='Lượng chất béo (g)')),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('duration', models.IntegerField(help_text='Thời gian tập luyện (phút)')),
                ('calories_burned', models.IntegerField(help_text='Lượng calo tiêu thụ')),
                ('status', models.CharField(choices=[('pending', 'Chưa thực hiện'), ('completed', 'Hoàn thành')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('user', 'Người dùng'), ('expert', 'Chuyên gia')], default='user', max_length=10)),
                ('avatar', cloudinary.models.CloudinaryField(max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpertProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(max_length=255)),
                ('experience_years', models.IntegerField()),
                ('bio', models.TextField()),
                ('expert', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expert_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_mode', models.CharField(choices=[('personal', 'Theo dõi cá nhân'), ('connected', 'Kết nối với chuyên gia')], max_length=20)),
                ('connected_expert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='healths.expertprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('water', 'Uống nước'), ('workout', 'Tập luyện'), ('rest', 'Nghỉ ngơi')], max_length=20)),
                ('message', models.CharField(max_length=255)),
                ('time', models.TimeField()),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='healths.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('goal', models.CharField(choices=[('gain_muscle', 'Tăng cơ'), ('lose_weight', 'Giảm cân'), ('maintain', 'Duy trì sức khỏe')], max_length=20)),
                ('meal_type', models.CharField(choices=[('breakfast', 'Bữa sáng'), ('lunch', 'Bữa trưa'), ('dinner', 'Bữa tối')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('health_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healths.healthprofile')),
                ('meal', models.ManyToManyField(to='healths.meal')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to='healths.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='HealthTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('bmi', models.FloatField(blank=True, null=True)),
                ('steps', models.IntegerField(default=0)),
                ('heart_rate', models.IntegerField(blank=True, null=True)),
                ('water_intake', models.FloatField(default=0.0, help_text='Lượng nước uống (lít)')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_tracking', to='healths.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='healthprofile',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_profile', to='healths.userprofile'),
        ),
        migrations.CreateModel(
            name='HealthJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('note', models.TextField()),
                ('mood', models.CharField(choices=[('happy', 'Vui'), ('normal', 'Bình thường'), ('tired', 'Mệt mỏi'), ('stressed', 'Căng thẳng')], max_length=50)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_journals', to='healths.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('status', models.CharField(choices=[('pending', 'Chưa hoàn thành'), ('completed', 'Hoàn thành')], default='pending', max_length=20)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_schedules', to='healths.userprofile')),
                ('workout', models.ManyToManyField(to='healths.workout')),
            ],
        ),
    ]
