# Generated by Django 5.1.7 on 2025-05-20 06:45

import ckeditor.fields
import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', cloudinary.models.CloudinaryField(max_length=255)),
                ('calories', models.PositiveIntegerField()),
                ('protein', models.FloatField()),
                ('carbs', models.FloatField()),
                ('fat', models.FloatField()),
                ('goal', models.CharField(choices=[('gain_muscle', 'Tăng cơ'), ('lose_weight', 'Giảm cân'), ('maintain', 'Duy trì sức khỏe')], max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('plan_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('goal', models.CharField(choices=[('gain_muscle', 'Tăng cơ'), ('lose_weight', 'Giảm cân'), ('maintain', 'Duy trì sức khỏe')], max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', cloudinary.models.CloudinaryField(max_length=255)),
                ('duration', models.PositiveIntegerField(help_text='Thời gian (phút)')),
                ('calories_burned', models.PositiveIntegerField()),
                ('goal', models.CharField(blank=True, choices=[('gain_muscle', 'Tăng cơ'), ('lose_weight', 'Giảm cân'), ('maintain', 'Duy trì sức khỏe')], max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('user', 'Người dùng'), ('expert', 'Chuyên gia'), ('admin', 'Admin')], default='user', max_length=20)),
                ('avatar', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('male', 'Nam'), ('female', 'Nữ')], default='male', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File')], default='text', max_length=20)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('expert_type', models.CharField(choices=[('trainer', 'Huấn luyện viên'), ('nutritionist', 'Chuyên gia dinh dưỡng')], max_length=20)),
                ('specialization', models.CharField(max_length=255)),
                ('experience_years', models.PositiveIntegerField()),
                ('bio', ckeditor.fields.RichTextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expert_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MealPlanMeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('meal_time', models.CharField(choices=[('breakfast', 'Sáng'), ('lunch', 'Trưa'), ('dinner', 'Tối'), ('snack', 'Ăn nhẹ')], max_length=20)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mealplan_meal', to='healths.meal')),
                ('meal_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mealplan_meal', to='healths.mealplan')),
            ],
            options={
                'unique_together': {('meal_plan', 'meal', 'meal_time', 'date')},
            },
        ),
        migrations.AddField(
            model_name='mealplan',
            name='meals',
            field=models.ManyToManyField(through='healths.MealPlanMeal', to='healths.meal'),
        ),
        migrations.CreateModel(
            name='RegularUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('tracking_mode', models.CharField(choices=[('personal', 'Theo dõi cá nhân'), ('connected', 'Kết nối với chuyên gia')], default='personal', max_length=20)),
                ('connected_nutritionist', models.ForeignKey(blank=True, limit_choices_to={'expert_type': 'nutritionist'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='connected_nutritionists', to='healths.expert')),
                ('connected_trainer', models.ForeignKey(blank=True, limit_choices_to={'expert_type': 'trainer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='connected_trainers', to='healths.expert')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='regular_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='mealplan',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to='healths.regularuser'),
        ),
        migrations.CreateModel(
            name='HealthProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('height', models.FloatField(help_text='Chiều cao (cm)')),
                ('weight', models.FloatField(help_text='Cân nặng (kg)')),
                ('age', models.PositiveIntegerField()),
                ('goal', models.CharField(choices=[('gain_muscle', 'Tăng cơ'), ('lose_weight', 'Giảm cân'), ('maintain', 'Duy trì sức khỏe')], default='maintain', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_profiles', to='healths.regularuser')),
            ],
            options={
                'get_latest_by': 'created_date',
            },
        ),
        migrations.CreateModel(
            name='HealthJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField()),
                ('mood', models.CharField(choices=[('happy', 'Vui'), ('normal', 'Bình thường'), ('tired', 'Mệt'), ('stressed', 'Căng thẳng')], max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_journals', to='healths.regularuser')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('reminder_type', models.CharField(choices=[('water', 'Uống nước'), ('workout', 'Tập luyện'), ('rest', 'Nghỉ ngơi')], max_length=20)),
                ('message', models.CharField(max_length=255)),
                ('send_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='healths.regularuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Chưa hoàn thành'), ('completed', 'Hoàn thành')], default='pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_plans', to='healths.regularuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Chưa thực hiện'), ('completed', 'Hoàn thành')], default='pending', max_length=20)),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='healths.workout')),
                ('workout_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='healths.workoutplan')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='workoutplan',
            name='workout',
            field=models.ManyToManyField(through='healths.WorkoutSession', to='healths.workout'),
        ),
        migrations.CreateModel(
            name='HealthTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('bmi', models.FloatField(blank=True, null=True)),
                ('steps', models.PositiveIntegerField(default=0)),
                ('heart_rate', models.PositiveIntegerField(blank=True, null=True)),
                ('water_intake', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_tracking', to='healths.regularuser')),
            ],
            options={
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='healths.expert')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healths.regularuser')),
            ],
            options={
                'unique_together': {('expert', 'reviewer')},
            },
        ),
    ]
